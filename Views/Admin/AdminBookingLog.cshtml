@{
    Layout = null;
    ViewBag.Title = "User Profile";
}

@{

    // Define the number of groups and buttons per row
    int group10Rows = 10;
    int group10ButtonsPerRow = 4;

    int group9Rows = 10;
    int group9ButtonsPerRow = 4;


    int count = 1;



    var seatid = "";
    //int id = 0;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Book Now</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@500;600;700&display=swap" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="~/css/confirmation.css" />
    <style>
        body {
            margin: 0;
            font-family: 'Poppins', sans-serif;
            background-image: url('/assets/images/background.png');
            background-size: cover;
            background-position: center;
            height: 100vh;
            overflow: hidden;
        }

        .admin-dashboard {
            display: flex;
            width: 100%;
            height: 100vh;
            position: relative;
        }

        .sidebar {
            width: 250px;
            background: rgba(255, 255, 255, 0.9);
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 30px 0;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            justify-content: space-between;
        }

        .logo-container {
            width: 100%;
            padding: 0 20px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .logo-bg-void-1 {
            width: 100%;
            height: 120px;
            background: url('/assets/images/logo_bg_void_1.png') center/contain no-repeat;
        }

        .nav-items {
            display: flex;
            flex-direction: column;
            gap: 30px;
            flex-grow: 0.5;
            justify-content: center;
        }

        .nav-item {
            display: flex;
            align-items: center;
            gap: 20px;
            cursor: pointer;
        }

            .nav-item .icon {
                width: 40px;
                height: 40px;
            }

            .nav-item .nav-text {
                font-weight: 600;
                font-size: 24px;
                color: #00B5EC;
            }

            .nav-item .nav-textsl {
                font-weight: 600;
                font-size: 24px;
                color: #4DB848;
            }

            .nav-item .logout {
                color: #DD5353;
            }

        .logout-container {
            margin-top: auto;
            margin-bottom: 30px;
        }

        .content {
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            color: #00B5EC;
            padding: 40px;
            position: relative;
        }

        .header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            width: 100%;
            padding: 20px;
        }

        .admin-btn {
            display: flex;
            align-items: center;
            gap: 20px; /* Reduced gap for better alignment */
            background: none;
            border: none;
            cursor: pointer;
            position: absolute;
            top: 20px;
            right: 40px; /* Adjust the positioning to be on the top right */
            z-index: 10; /* Ensure 'User' text and icon are above other elements */
        }

            .admin-btn .admin {
                font-weight: 600;
                font-size: 48px;
                color: #00B5EC;
            }

            .admin-btn:hover .admin {
                font-weight: 600;
                font-size: 48px;
                color: #00B5EC;
                background-color: none;
                color: #4DB848;
            }

            .admin-btn .adminsl {
                font-weight: 600;
                font-size: 48px;
                color: #4DB848;
            }

            .admin-btn .user-icon img {
                width: 60px;
                height: 60px;
            }

        .container-4 {
            border-radius: 30px;
            background: #FFFFFF;
            position: absolute;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 30px; /* Padding for internal content */
            width: 1150px;
            height: 510px;
            box-sizing: content-box;
            margin-top: 110px; /* Increased margin to prevent overlapping with the header */
        }

        .container-5 {
            display: flex;
            flex-direction: row;
            width: 30%;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        .profile-overview {
            width: 100%;
            font-weight: 600;
            font-size: 40px;
            color: #00B5EC;
            text-align: left;
            margin-bottom: 20px;
        }



        .edit-3-svgrepo-com {
            width: 24px;
            height: 24px;
            margin-right: 10px;
        }

        .line-1 {
            background: #00B5EC;
            width: 100%;
            height: 2px;
            margin: 20px 0;
        }

        .username, .email {
            font-weight: 600;
            font-size: 20px;
            color: #00B5EC;
            width: 10%;
        }

        .group-1, .group-29 {
            border-radius: 30px;
            background: rgba(192, 249, 255, 0.28);
            padding: 10px 20px;
            width: 60%;
            box-sizing: border-box;
        }

        .user-1, .usergmail-com {
            font-weight: 500;
            font-size: 20px;
            color: #00B5EC;
        }

        .empty-area {
            height: 60px;
        }

        .group-13 {
            border-radius: 30px;
            background: #00B5EC;
            position: relative;
            text-align: center;
            padding: 5px 5px 5px 5px;
            width: 200px;
            margin-top: 400px;
            box-sizing: border-box;
            align-items: center;
        }

        .pay-now-1 {
            overflow-wrap: break-word;
            font-family: 'Poppins';
            font-weight: 600;
            font-size: 36px;
            color: #FFFFFF;
            text-align: center;
        }

        .container-7 {
            margin: 0 0 36px 12.4px;
            display: flex;
            flex-direction: row;
            width: fit-content;
            box-sizing: border-box;
        }


        .container-50 {
            display: flex;
            flex-direction: row;
            width: fit-content;
            box-sizing: border-box;
            font-size: 12px;
        }

        .search-by-date {
            margin-top: 3vh;
            margin-bottom: 2vh;
            display: flex;
            justify-content: center;
            overflow-wrap: break-word;
            font-family: 'Poppins';
            font-weight: 600;
            font-size: 30px;
            color: #00B5EC;
        }

        .calendar-container {
            display: inline-block;
            border-radius: 20px;
            padding: 10px;
            font-family: Arial, sans-serif;
            background-color: #F6F6F6;
            margin-bottom: 2vh;
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

            .calendar-header button {
                background-color: #00B5EC;
                color: white;
                border: none;
                padding: 5px 10px;
                cursor: pointer;
                border-radius: 5px;
            }

            .calendar-header .month-year {
                font-weight: bold;
                font-size: 15px;
            }

        .calendar-body {
            margin-top: 10px;
            font-size: 15px;
        }

        .day-names, .days {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 5px;
            text-align: center;
        }

            .day-names span {
                font-weight: bold;
            }

            .days span {
                padding: 10px;
                cursor: pointer;
                border-radius: 5px;
                transition: background-color 0.3s;
            }

                .days span:hover {
                    background-color: #00B5EC;
                    color: white;
                }

                .days span.selected {
                    background-color: #4DB848;
                    color: white;
                }

        #selected-date {
            margin-top: 10px;
            padding: 5px;
            width: 90%;
            font-size: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .group-14 {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 2vh;
        }

        .confirm {
            overflow-wrap: break-word;
            font-family: 'Poppins';
            font-weight: 600;
            font-size: 20px;
            color: white;
            background: #00B5EC;
            margin-left: -6vh;
            padding: 10px;
            display: flex;
            position: relative;
            border-radius: 30px;
            width: 40vh;
            justify-content: center;
            border: 0px white;
            cursor: pointer;
        }

            .confirm:hover {
                overflow-wrap: break-word;
                font-family: 'Poppins';
                font-weight: 600;
                font-size: 20px;
                color: white;
                background: #4DB848;
                margin-left: -6vh;
                padding: 10px;
                display: flex;
                position: relative;
                border-radius: 30px;
                width: 40vh;
                justify-content: center;
                border: 0px white;
                cursor: pointer;
            }

        .group-10 {
            margin-right: 30px;
        }

        .container-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .container {
            flex: 1;
            margin: 0 5px;
        }

        .group-10 button {
            width: 10vh;
            padding: 10px;
            background-color: #D9D9D9;
            color: white;
            border: none;
            border-radius: 50px;
            cursor: pointer;
        }

        .group-9 button {
            width: 10vh;
            padding: 10px;
            background-color: #D9D9D9;
            color: white;
            border: none;
            border-radius: 50px;
            cursor: pointer;
        }

        button:hover {
            background-color: #00B5EC;
        }

        .container-50 {
            display: flex;
            margin-top: -2vh;
        }

        .search-by-date {
            font-size: 25px;
            font-family: Arial, sans-serif;
            margin-left: -2vh;
        }

        .booking-id {
            font-family: Arial, sans-serif;
            font-weight: bold;
            padding: 10px;
            text-align: center;
            color: #4DB848;
            font-size: 25px;
        }

        .date-and-time-compact-expanded {
            padding-right: 40px;
        }

        .group-9, .group-10 {
            margin: 30px;
            margin-top: -5vh;
        }

        .group-15,.group-14{
           font-weight:bold;
           font-size:20px;
           text-align:center;
        }
    </style>

</head>
<body>


    <div class="admin-dashboard">
        <div class="sidebar">
            <div class="logo-container">
                <div class="logo-bg-void-1"></div>
            </div>
            <div class="nav-items">
                <a href="@Url.Action("Dashboard", "Admin")" style="text-decoration: none;">
                    <div class="nav-item">
                        <img class="icon" src="~/assets/vectors/vector_16_x2.svg" />
                        <span class="nav-text">Home</span>
                    </div>
                </a>
                <a href="@Url.Action("AdminManageSeats", "Admin")" style="text-decoration: none;">
                    <div class="nav-item">
                        <img class="icon" src="~/assets/vectors/vector_28_x2.svg" />
                        <span class="nav-text">Manage Seats</span>
                    </div>
                </a>
                <a href="@Url.Action("AdminBookingLog", "Admin")" style="text-decoration: none;">
                    <div class="nav-item">
                        <img class="icon" src="~/assets/vectors/vector_13_x2.svg" />
                        <span class="nav-textsl">Booking Logs</span>
                    </div>
                </a>
                <a href="@Url.Action("AdminInquiries", "Admin")" style="text-decoration: none;">
                    <div class="nav-item">
                        <img class="icon" src="~/assets/vectors/mailed_svgrepo_com_6_x2.svg" />
                        <span class="nav-text">Inquiries</span>
                    </div>
                </a>
            </div>
            <div class="logout-container">
                <a href="@Url.Action("Index", "Home")" style="text-decoration: none;">
                    <div class="nav-item">
                        <img class="icon" src="~/assets/vectors/logout_svgrepo_com_x2.svg" />
                        <span class="nav-text logout">Log Out</span>
                    </div>
                </a>
            </div>
        </div>

        <div class="content">
            <div class="header">
                <div class="admin-btn"">
                    <div class="user-icon">
                        <img src="../assets/vectors/vector_59_x2.svg" alt="User Icon">
                    </div>
                    <span class="admin">Admin</span>
                </div>
            </div>


            <div class="container-4">
                <span class="profile-overview">Booking Log</span>


                <div class="container-50">
                    <div class="container-30">
                        <div class="search-by-date">
                            Select Date
                        </div>
                        <div class="date-and-time-compact-expanded">
                            <div class="calendar-container">
                                <div class="calendar-header">
                                    <button class="prev-month">&lt;</button>
                                    <span class="month-year"></span>
                                    <button class="next-month">&gt;</button>
                                </div>
                                <div class="calendar-body">
                                    <div class="day-names">
                                        <span>Sun</span><span>Mon</span><span>Tue</span><span>Wed</span>
                                        <span>Thu</span><span>Fri</span><span>Sat</span>
                                    </div>
                                    <div class="days"></div>
                                </div>
                                <input type="text" id="selected-date" placeholder="Select Date" readonly>
                            </div>
                        </div>

                        <div class="group-14">
                            Booking ID: <span id="bookingid"></span>
                        </div>
                        <div class="group-15">
                            Booked By:  <span id="bookinguser"></span>
                        </div>
                    </div>
                    <!-- Group 10 -->
                    <div class="group-10">
                        @for (int row = 0; row < group10Rows; row++)
                        {
                            <div class="container-row">
                                @for (int col = 0; col < group10ButtonsPerRow; col++)
                                {
                                    var index = (row * group10ButtonsPerRow) + col; // Calculate the index for button class array
                                    var buttonId = $"seat{count}"; // Generate a unique ID for each button
                                    var buttonClass = "my-button";
                                    string seatNumber = seatid;

                                    <div class="container">
                                        <button id="@buttonId" class="@buttonClass">@($"Seat {count}")</button>
                                    </div>
                                    count++;
                                }
                            </div>
                        }
                    </div>
                    <!-- Group 9 -->
                    <div class="group-9">
                        @for (int row = 0; row < group9Rows; row++)
                        {
                            <div class="container-row">
                                @for (int col = 0; col < group9ButtonsPerRow; col++)
                                {
                                    var index = (row * group9ButtonsPerRow) + col; // Calculate the index for button class array
                                    var buttonId = $"seat{count}"; // Generate a unique ID for each button
                                    var buttonClass = "my-button";
                                    <div class="container">
                                        <button id="@buttonId" class="@buttonClass">@($"Seat {count}")</button>
                                    </div>
                                    count++;
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>



        <script>
     
            var recieveData;

            /* Include the JavaScript code from above */
            document.addEventListener('DOMContentLoaded', function () {

                const selectedDateElement = document.getElementById('selected-date');
                const calendar = document.querySelector('.calendar-container');
                const monthYearElement = calendar.querySelector('.month-year');
                const daysContainer = calendar.querySelector('.days');
                const prevMonthButton = calendar.querySelector('.prev-month');
                const nextMonthButton = calendar.querySelector('.next-month');

                let currentDate = new Date();

                // Render the calendar for the given date
                function renderCalendar(date) {
                    const year = date.getFullYear();
                    const month = date.getMonth();
                    const firstDay = new Date(year, month, 1).getDay();
                    const lastDate = new Date(year, month + 1, 0).getDate();

                    // Set the month and year title
                    monthYearElement.textContent = date.toLocaleString('default', { month: 'long', year: 'numeric' });

                    // Clear previous days
                    daysContainer.innerHTML = '';

                    // Add empty spans for days of the previous month
                    for (let i = 0; i < firstDay; i++) {
                        daysContainer.innerHTML += `<span></span>`;
                    }

                    // Add days of the current month
                    for (let i = 1; i <= lastDate; i++) {
                        const dayElement = document.createElement('span');
                        dayElement.textContent = i;
                        dayElement.addEventListener('click', () => selectDate(new Date(year, month, i)));
                        daysContainer.appendChild(dayElement);


                    }
                }

                // Handle date selection
                function selectDate(date) {
                    // Format the date to YYYY-MM-DD without UTC shift
                    const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;

                    // Set the input field value to the formatted date
                    selectedDateElement.value = formattedDate;
                    console.log('Date', formattedDate);

                    
                    // Remove the 'selected' class from all days
                    document.querySelectorAll('.days span').forEach(day => day.classList.remove('selected'));

                    // Calculate the correct index for the nth-child selector
                    const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).getDay();
                    const index = date.getDate() + firstDayOfMonth;

                    // Highlight the selected day
                    const selectedDayElement = document.querySelector(`.days span:nth-child(${index})`);
                    if (selectedDayElement) {
                        selectedDayElement.classList.add('selected');
                    }

                    // Set the text of elements with IDs 'bookingid' and 'bookinguser'
                    document.getElementById('bookingid').innerText = '-';
                    document.getElementById('bookinguser').innerText = '-';


                    // Handle button clicks for seat selection
                    const buttons = document.querySelectorAll('.container .my-button');
                    let seatNumber;
                    let clickedButton = null;

                    buttons.forEach(button => {
                        button.addEventListener('click', function () {

                        });
                    });

                    buttons.forEach(button => {

                        button.addEventListener('click', function () {
                            buttonId = this.id;
                            console.log('Clicked Button ID:', buttonId);
                            seatNumber = buttonId.split('').filter(char => !isNaN(char)).join('');
                            console.log('Clicked Button ID:', seatNumber);

                            // Toggle the 'clicked' class
                            const isClicked = this.classList.contains('clicked');
                            this.classList.toggle('clicked');

                            // Check if there's a previously clicked button
                            if (clickedButton && clickedButton !== this) {
                                // Reset the previous button's styles
                                clickedButton.style.backgroundColor = '#00B5EC';  // Original background color
                                clickedButton.style.color = 'white';              // Original text color
                            }

                            // Update the reference to the currently clicked button
                            clickedButton = this;

                            // Apply the new styles to the currently clicked button
                            this.style.backgroundColor = '#4DB848'; // Clicked background color
                            this.style.color = 'white'; // Clicked text color

                           
                            
                            $.ajax({
                                url: '/Admin/GetBookingsByDate',  // The URL of the backend endpoint
                                type: 'GET',  // The HTTP method to use (GET in this case)
                                data: { date: formattedDate, number: seatNumber },  // Data to send to the server
                                success: function (data) {

                                    // Check if data is not empty
                                    if (data.length > 0) {
                                        // Populate the table with returned data
                                        console.log("Data Fetched");
                                        console.log(data);

                                     

                                        data.forEach(function (booking) {

                                            let user = booking.traineeID; // Adjust the property name based on your JSON structure
                                            var id = booking.bookId;

                                            // Update the HTML element with the fetched value
                                            console.log(booking);


                                            console.log(id);
                                            console.log(user);

                                            $('#bookingid').text(id);
                                            $('#bookinguser').text(user);
                                        });

                                    } else {

                                        $('#bookingid').text('-');
                                        $('#bookinguser').text('-');
                                    }

                                },
                                error: function (xhr, status, error) {
                                    // This function is executed when the AJAX request fails
                                    console.error('Error fetching data:', error);  // Log the error for debugging
                                    alert('Error fetching data. Please try again.');  // Display an error message to the user

                                }
                            });

                        });
                    });

                    // Fetch seat numbers
                    $.ajax({
                        url: '/Book/GetSeatNumbers',
                        type: 'GET',
                        data: { date: formattedDate },
                        success: function (data) {
                            if (data.length > 0) {
                                console.log("Data Fetched");
                                console.log(data);

                                for (let n = 1; n < 81; n++) {
                                    $(`#seat${n}`).css({
                                        'background-color': '#D9D9D9',
                                        'color': 'white',
                                        'cursor': 'default',
                                        'pointer-events': 'none'
                                    });
                                }

                                data.forEach(function (booking) {
                                    let data = booking.seatNumber;
                             
                                    console.log(booking);

                                    $(`#seat${data}`).css({
                                        'background-color': '#00B5EC',
                                        'color': 'white',
                                        'cursor': 'pointer',
                                        'pointer-events': 'auto'
                                    });


                                    $('.my-button').addClass('hover-effect');

                                    $('.my-button').on('click', function () {
                                        $(this).toggleClass('clicked');
                                    });
                                });
                            } else {

                                for (let n = 1; n < 81; n++) {
                                    $(`#seat${n}`).css({
                                        'background-color': '#D9D9D9',
                                        'color': 'white',
                                        'cursor': 'default',
                                        'pointer-events': 'none'
                                    });
                                }
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching data:', error);
                            alert('Error fetching data. Please try again.');
                        }
                    });
              


                }
                

                // Navigate to the previous month
                prevMonthButton.addEventListener('click', () => {
                    currentDate.setMonth(currentDate.getMonth() - 1);
                    renderCalendar(currentDate);
                });

                // Navigate to the next month
                nextMonthButton.addEventListener('click', () => {
                    currentDate.setMonth(currentDate.getMonth() + 1);
                    renderCalendar(currentDate);
                });

                // Initialize the calendar with the current date
                renderCalendar(currentDate);
            });
           

        </script>

</body>
</html>
